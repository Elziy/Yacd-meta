name: Build and Release Frontend

on:
  push:
    branches:
      - master
  release:
    types:
      - created
      - published
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.get_sha.outputs.short_sha }}
      build_path: ${{ steps.zip_output.outputs.build_path }}

    steps:
      # Checkout the repository
      - name: Checkout Dashboard code
        uses: actions/checkout@v3

      # Set up pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: latest

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: pnpm

      # Get short SHA
      - name: Get short SHA
        id: get_sha
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      # Install packages and build the project
      - name: Install package and build
        run: |
          pnpm install --no-frozen-lockfile
          pnpm build

      # Zip the build output
      - name: Zip build output
        id: zip_output
        run: |
          zip -r yacd-${{ steps.get_sha.outputs.short_sha }}.zip ./public
          echo "::set-output name=build_path::$(pwd)/yacd-${{ steps.get_sha.outputs.short_sha }}.zip"

      # Upload the artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: yacd-${{ steps.get_sha.outputs.short_sha }}.zip

  Upload-Prerelease:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      # Download build artifact from build job
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: ./build

      # Upload artifact as a pre-release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: prerelease-${{ needs.build.outputs.short_sha }}
          release_name: "Pre-release ${{ needs.build.outputs.short_sha }}"
          draft: false
          prerelease: true
          files: ./build/yacd-${{ needs.build.outputs.short_sha }}.zip

  Upload-Release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      # Download build artifact from build job
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: ./build

      # Rename the build artifact for release
      - name: Rename build artifact
        run: |
          mv ./build/yacd-${{ needs.build.outputs.short_sha }}.zip ./build/yacd-${{ github.event.inputs.version }}.zip

      # Upload artifact to GitHub release
      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/yacd-${{ github.event.inputs.version }}.zip
          asset_name: yacd-${{ github.event.inputs.version }}.zip
          asset_content_type: application/zip
